Welcome to Extrae 3.1.0 (revision 3316 based on extrae/trunk)
Extrae: Parsing the configuration file (../extrae.xml) begins
Extrae: Tracing package is located on /scratch/package
Extrae: Generating intermediate files for Paraver traces.
Extrae: Tracing buffer can hold 500000 events
Extrae: Circular buffer disabled.
Extrae: Dynamic memory instrumentation is disabled.
Extrae: Basic I/O memory instrumentation is disabled.
Extrae: Parsing the configuration file (../extrae.xml) has ended
Extrae: Intermediate traces will be stored in /home/bsc/bsc/tools/OmpSs_replay/tracing_library/tests/test_in_out1
Extrae: Tracing mode is set to: Detail.
Extrae: Successfully initiated with 1 tasks

starting program
Warning: not specified file with names of the tasks: use export TASKNAMES=<path>
The names of the tasks may be corrupted!!!!
Testing: emit css start 
Testing: starting task with name fake_name
Testing: find_taskcode NOT YET SPECIFIED,  fake_name  -->  1
Testing: starting task number 1  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 1
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 1
Testing: ending task 
Testing: ending task number 1
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 2  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 2
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  1  ->   2 (INOUT) 
Testing: emit dependency from the previous task no: 1
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  1  ->   2 (INOUT) 
Testing: emit dependency from the previous task no: 1
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 2
Testing: ending task 
Testing: ending task number 2
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 3  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 3
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  2  ->   3 (INOUT) 
Testing: emit dependency from the previous task no: 2
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  2  ->   3 (INOUT) 
Testing: emit dependency from the previous task no: 2
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 3
Testing: ending task 
Testing: ending task number 3
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 4  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 4
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  3  ->   4 (INPUT) 
Testing: emit dependency from the previous task no: 3
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Done task 4
Testing: ending task 
Testing: ending task number 4
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 5  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 5
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  3  ->   5 (INPUT) 
Testing: emit dependency from the previous task no: 3
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Done task 5
Testing: ending task 
Testing: ending task number 5
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 6  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 6
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  3  ->   6 (INPUT) 
Testing: emit dependency from the previous task no: 3
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  3  ->   6 (INOUT) 
Testing: emit dependency from the previous task no: 3
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 6
Testing: ending task 
Testing: ending task number 6
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 7  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 7
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  6  ->   7 (INOUT) 
Testing: emit dependency from the previous task no: 6
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 1
Testing: ending task 
Testing: ending task number 7
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 8  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 8
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  7  ->   8 (INOUT) 
Testing: emit dependency from the previous task no: 7
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  7  ->   8 (INOUT) 
Testing: emit dependency from the previous task no: 7
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 2
Testing: ending task 
Testing: ending task number 8
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 9  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 9
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  8  ->   9 (INOUT) 
Testing: emit dependency from the previous task no: 8
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  8  ->   9 (INOUT) 
Testing: emit dependency from the previous task no: 8
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 3
Testing: ending task 
Testing: ending task number 9
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 10  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 10
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  9  ->   10 (INPUT) 
Testing: emit dependency from the previous task no: 9
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Done task 4
Testing: ending task 
Testing: ending task number 10
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 11  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 11
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  9  ->   11 (INPUT) 
Testing: emit dependency from the previous task no: 9
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Done task 5
Testing: ending task 
Testing: ending task number 11
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 12  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 12
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  9  ->   12 (INPUT) 
Testing: emit dependency from the previous task no: 9
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  9  ->   12 (INOUT) 
Testing: emit dependency from the previous task no: 9
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 6
Testing: ending task 
Testing: ending task number 12
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 13  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 13
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  12  ->   13 (INOUT) 
Testing: emit dependency from the previous task no: 12
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 1
Testing: ending task 
Testing: ending task number 13
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 14  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 14
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  13  ->   14 (INOUT) 
Testing: emit dependency from the previous task no: 13
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  13  ->   14 (INOUT) 
Testing: emit dependency from the previous task no: 13
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 2
Testing: ending task 
Testing: ending task number 14
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 15  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 15
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_output_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  14  ->   15 (INOUT) 
Testing: emit dependency from the previous task no: 14
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  14  ->   15 (INOUT) 
Testing: emit dependency from the previous task no: 14
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 3
Testing: ending task 
Testing: ending task number 15
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 16  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 16
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  15  ->   16 (INPUT) 
Testing: emit dependency from the previous task no: 15
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Done task 4
Testing: ending task 
Testing: ending task number 16
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 17  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 17
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  15  ->   17 (INPUT) 
Testing: emit dependency from the previous task no: 15
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Done task 5
Testing: ending task 
Testing: ending task number 17
Testing: emit task end
Testing: starting task with name fake_name
Testing: find_taskcode ALREADY SPECIFIED,  fake_name  -->  1
Testing: starting task number 18  name is fake_name which is coded into 1 
Testing: emit task start code 1, number 18
Testing: replay_input_task parName fake name    ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  15  ->   18 (INPUT) 
Testing: emit dependency from the previous task no: 15
Testing: replay_inout_task parName fake name  ptr ,  element_size 4,   elements  1      
Testing: there is dependency tasks:  15  ->   18 (INOUT) 
Testing: emit dependency from the previous task no: 15
Testing: task: fake name
Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Testing: Done task 6
Testing: ending task 
Testing: ending task number 18
Testing: emit task end
Extrae: Intermediate raw trace file created : /home/bsc/bsc/tools/OmpSs_replay/tracing_library/tests/test_in_out1/set-0/TRACE.0000019818000000000000.mpit
Extrae: Intermediate raw sym file created : /home/bsc/bsc/tools/OmpSs_replay/tracing_library/tests/test_in_out1/set-0/TRACE.0000019818000000000000.sym
Extrae: Deallocating memory.
Extrae: Application has ended. Tracing has been terminated.
Extrae: Proceeding with the merge of the intermediate tracefiles.
Extrae: Executing the merge process (using /home/bsc/bsc/tools/OmpSs_replay/tracing_library/tests/test_in_out1/TRACE.mpits).
merger: Extrae 3.1.0 (revision 3316 based on extrae/trunk)
mpi2prv: Assigned nodes < bsc-Latitude-E7440 >
mpi2prv: Assigned size per processor < <1 Mbyte >
mpi2prv: File /home/bsc/bsc/tools/OmpSs_replay/tracing_library/tests/test_in_out1/set-0/TRACE.0000019818000000000000.mpit is object 1.1.1 on node bsc-Latitude-E7440 assigned to processor 0
mpi2prv: Time synchronization has been turned off
mpi2prv: Checking for target directory existance... exists, ok!
mpi2prv: Ignoring symbols from the application execution because mpi2prv does not support BFD
mpi2prv: Selected output trace format is Paraver
mpi2prv: Stored trace format is Paraver
mpi2prv: Searching synchronization points... done
mpi2prv: Enabling Time Synchronization (Node).
mpi2prv: Circular buffer enabled at tracing time? NO
mpi2prv: Parsing intermediate files
mpi2prv: Progress 1 of 2 ... 7.7% 15.4% 23.1% 30.8% 38.5% 46.2% 53.8% 61.5% 69.2% 76.9% 84.6% 92.3% 100.0% done
mpi2prv: Processor 0 succeeded to translate its assigned files
mpi2prv: Elapsed time translating files: 0 hours 0 minutes 0 seconds
mpi2prv: Elapsed time sorting addresses: 0 hours 0 minutes 0 seconds
mpi2prv: Generating tracefile (intermediate buffers of 6710784 events)
         This process can take a while. Please, be patient.
mpi2prv: Progress 2 of 2 ... 13.6% 18.2% 22.7% 27.3% 50.0% 54.5% 63.6% 68.2% 77.3% 81.8% 90.9% 95.5% 100.0% done
mpi2prv: Elapsed time merge step: 0 hours 0 minutes 0 seconds
mpi2prv: Resulting tracefile occupies 500 bytes
mpi2prv: Removing temporal files... done
mpi2prv: Elapsed time removing temporal files: 0 hours 0 minutes 0 seconds
mpi2prv: Congratulations! EXTRAE_Paraver_trace.prv has been generated.
